- hosts: macbook
  connection: local
  gather_facts: no
  sudo: no
  vars:
    homebrew_taps:
      - homebrew/binary
      - homebrew/dupes
      - homebrew/science
      - {name: caskroom/homebrew-versions, state: absent}
      - caskroom/cask
    homebrew_packages:
      - ansible
      - openssl
      - {name: openssl, state: linked, install_options: force }
      - curl
      - wget
      - git
      - gist
      - git-flow
      - hg
      - pssh

      - make
      - cmake
      - {name: global, install_options: with-pygments}
      - libiconv

      - ag
      - lv
      - ctags
      - readline
      - rlwrap
      - jq
      - libxml2
      - peco
      - vim
      - tree
      - screen
      - tmux

      - python
      - python3
      - pypy
      - ghc
      - cabal-install
      - lua
      - r

      - graphviz
      - plantuml
    homebrew_cask_packages:
      # - alfred
      # - clamxav
      - java
      - firefox-ja
      - google-chrome
      - google-hangouts
      - google-web-designer
      - xtrafinder

      - virtualbox
      - vagrant
      - iterm2
      - xquartz
      - wireshark
      - rstudio

      - atom
      - sublime-text
      - visual-studio-code
      - lighttable
      - kobito

      - skype
      # - limechat
      - cyberduck
      - dropbox
      - google-drive
      # - evernote
      # - skitch
    goroot: /usr/local/go
  tasks:
    - name: 基本的なdirを作る
      file: path={{ item }} state=directory
      with_items: [ ~/works, ~/.local/bin, ~/local/bin, ~/local/lib, ~/local/doc ]
    - name: dotfiles のlinkを作成する
      file: src=~/dotfiles/{{ item }} path=~/{{ item }} state=link
      with_items: [ .ackrc, .bashrc, .gitconfig, .inputrc, .screenrc, .tmux.conf, .vim, .vimrc, .zshrc ]
    - name: .bash_tokens を作成する(サービストークン用)
      file: path=~/.bash_tokens state=touch
    - name: .bash_profile に内容を追記する
      lineinfile:
        dest: '~/.bash_profile'
        regexp: '{{ item.regexp }}'
        line: '{{ item.line }}'
        insertafter: '{{ item.insertafter }}'
      with_items:
        - line: 'export HOMEBREW_CASK_OPTS="$HOMEBREW_CASK_OPTS --appdir=/Applications"'
          regexp: 'export HOMEBREW_CASK_OPTS="(\$HOMEBREW_CASK_OPTS *)?--appdir=/Applications"'
          insertafter: 'export HOMEBREW_CASK_OPTS=.*'
        - line: '. ~/.bashrc'
          regexp: '\. ~/.bashrc'
          insertafter: EOF
    - name: homebrew の tap リポジトリを追加
      homebrew_tap: tap={{ item.name|default(item) }} state={{ item.state|default('present') }}
      with_items: homebrew_taps
    - name: homebrew をアップデート
      homebrew: update_homebrew=yes
    - name: brew パッケージをインストール
      homebrew: >
        name={{ item.name|default(item) }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: homebrew_packages
      register: brew_result
    - name: brew パッケージの情報保存先ディレクトリを作成
      file: path=brew_info state=directory
    # - name: brew パッケージの情報を保存
    #   shell: brew info {{ item }} > brew_info/{{ item }}
    #   with_items: brew_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list

    - name: homebrew-cask のインストール
      homebrew: name=brew-cask state=latest
    - name: cask パッケージをインストール
      homebrew_cask: name={{ item.name|default(item) }} state={{ item.state|default('installed') }}
      with_items: homebrew_cask_packages
      register: cask_result
    - name: cask パッケージの情報保存先ディレクトリを作成
      file: path=cask_info state=directory
    - name: cask パッケージの情報を保存
      shell: brew cask info {{ item }} > cask_info/{{ item }}
      with_items: cask_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list

    - name: Haskell開発環境の情報取得
      shell: find $(brew info ghc | awk '/\/usr\/local\/Cellar/{print $1}') -name settings
      register: ghc_settings
    - name: Haskell開発環境構築用コンパイラ特定
      shell : find $(brew info gcc | awk '/\/usr\/local\/Cellar/{print $1}') -name gcc* | grep gcc | head -n 1
      register: gcc_for_ghc
    - name: Haskell開発環境準備
      lineinfile:
        dest: "{{ ghc_settings.stdout }}"
        regexp: '^(\s*\("C compiler command",\s*"[^"]*"\s*\),)'
        line: ' ("C compiler command", "{{ gcc_for_ghc.stdout }}"),'
        backup: yes
    - name: Python開発用環境を作成
      pip: name={{ item }}
      with_items: [ virtualenv, virtualenvwrapper, pipsi, pyflake8 ]
    - name: pipsiでツール類をインストール
      shell: pipsi install {{ item }}
      args:
        creates: ~/.local/venvs/{{ item }}
      with_items: [ vim-vint, seqdiag ]
    - name: Go言語のインストール準備
      git: repo=https://go.googlesource.com/go dest={{ goroot }} version=go1.4.1
    - name: Go言語のインストールを実施
      shell: ./all.bash
      args:
        chdir: '{{ goroot }}/src'
        creates: '{{ goroot }}/bin/go'
    - name: Goツール類のインストール
      shell: '{{ goroot }}/bin/go get -u {{ item }}'
      args:
        creates: ~/go/src/{{ item }}
      with_items: [ github.com/dinedal/textql ]
    - name: OSXのFinderの設定を変更する
      shell: defaults write com.apple.finder AppleShowAllFiles TRUE
